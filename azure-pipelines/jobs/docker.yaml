jobs:
- job: BuildAndScan
  displayName: Build and Scan
  steps:
  - template: ../steps/debug-vars.yaml
  - task: DockerCompose@0
    displayName: Build services
    inputs:
      action: Buils services
      containerregistrytype: 'Azure Container Registry'
      azureSubscriptionEndpoint: 'armconnection'
      azureContainerRegistry: 'hasdrubal.azurecr.io'
      dockerComposeFile: '**/docker-compose.yml'
      dockerComposeFileArgs: 'DOCKER_BUILD_SOURCE='
      projectName: $(Build.Repository.Name)
      includeSourceTags: true
      includeLatestTag: true

- job: DockerPush
  displayName: Push
  dependsOn: BuildAndScan
  steps:
  - template: ../steps/debug-vars.yaml
  - template: ../steps/append-sha.yaml
  - task: DockerCompose@0
    displayName: Push services
    inputs:
      action: Push services
      containerregistrytype: 'Azure Container Registry'
      azureSubscriptionEndpoint: 'armconnection'
      azureContainerRegistry: 'hasdrubal.azurecr.io'
      dockerComposeFile: '**/docker-compose.yml'
      dockerComposeFileArgs: 'DOCKER_BUILD_SOURCE='
      projectName: $(Build.Repository.Name)
      qualifyImageNames: true
      additionalImageTags: $(Build.BuildId)
  - task: DockerCompose@0
    displayName: Lock services
    condition: eq(variables.isTag, 'True')
    inputs:
      action: Lock services
      containerregistrytype: 'Azure Container Registry'
      azureSubscriptionEndpoint: 'armconnection'
      azureContainerRegistry: 'hasdrubal.azurecr.io'
      dockerComposeFile: '**/docker-compose.yml'
      dockerComposeFileArgs: 'DOCKER_BUILD_SOURCE='
      projectName: $(Build.Repository.Name)
      qualifyImageNames: true
      outputDockerComposeFile: $(Build.StagingDirectory)/docker-compose.yml'